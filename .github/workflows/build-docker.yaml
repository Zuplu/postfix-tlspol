# Made with ❤️ by Zuplu.
# All rights reserved.

name: 🚀 Build and Deploy Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY_IMAGE: 'zuplu/postfix-tlspol'

permissions: read-all

jobs:
  test:
    name: 🧪 Unit Testing
    uses: ./.github/workflows/go-test.yaml

  metadata:
    name: 📊 Synthesize Docker Metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ toJSON(steps.metadata.outputs.version) }}
      tags: ${{ toJSON(steps.metadata.outputs.tags) }}
      labels: ${{ toJSON(steps.metadata.outputs.labels) }}
      annotations: ${{ toJSON(steps.metadata.outputs.annotations) }}
      json: ${{ toJSON(steps.metadata.outputs.json) }}
    steps:
      - id: metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # pin@v5
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=latest,enable={{is_default_branch}}

  build:
    name: 🚧 Build Docker Images
    needs: [ test, metadata ]
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
          - linux/386
          - linux/ppc64le
          - linux/riscv64
          - linux/s390x
    runs-on: ubuntu-latest
    steps:
      - name: 📑 Prepare environment
        run: |
          PLATFORM="$(echo "${{ matrix.platform }}" | tr '/' '-')"
          echo "PLATFORM=$PLATFORM" >> "$GITHUB_ENV"

      - name: 📦 Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4

      - name: ⚙️ Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # pin@v3

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # pin@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # pin@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build platform-specific Docker image 🚧
        id: build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # pin@v6
        env:
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          platforms: ${{ matrix.platform }}
          context: .
          file: deployments/Dockerfile
          push: true
          sbom: true
          provenance: true
          labels: ${{ fromJSON(needs.metadata.outputs.labels) }}
          annotations: ${{ fromJSON(needs.metadata.outputs.annotations) }}
          outputs: type=image,"name=${{ env.REGISTRY_IMAGE }}",push-by-digest=true,name-canonical=true,push=true
          cache-to: type=gha,mode=max,scope=${{ env.PLATFORM }}
          cache-from: type=gha,scope=${{ env.PLATFORM }}

      - name: 📄 Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: 📤 Upload digest
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # pin@v4
        with:
          name: digest-${{ env.PLATFORM }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  bundle:
    name: 📦 Bundle and Deploy ✨
    needs: [ metadata, build ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
    env:
      METADATA: ${{ fromJSON(needs.metadata.outputs.json) }}
    steps:
      - name: 📥 Download digests
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digest-*
          merge-multiple: true

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # pin@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ✨ Bundle and push manifest
        working-directory: ${{ runner.temp }}/digests
        run: |
          DIGEST="$(docker buildx imagetools create --progress rawjson \
            $(jq -r '.tags | map("-t \(.)") | join(" ")' <<< "$METADATA") \
            $(printf "${{ env.REGISTRY_IMAGE }}@sha256:%s " *) 2>&1 | \
            jq -r 'select(has("logs")) | .logs[].data | @base64d | match("sha256:[a-f0-9]{64}").string' | tail -n1)"
          echo "DIGEST=$DIGEST" >> "$GITHUB_ENV"

      - name: 🔏 Attest build provenance
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # pin@v2
        id: attest
        with:
          subject-name: index.docker.io/${{ env.REGISTRY_IMAGE }}
          subject-digest: ${{ env.DIGEST }}
          push-to-registry: false
